#!/usr/bin/env python3

from hltex.translator import Translator
import traceback
import struct
import sys
import json


while 1:
    #The first four bytes from the app state the rest of the message's length.
    text_length_bytes = sys.stdin.buffer.read(4)
    # sys.stderr.write(str(type(text_length_bytes)))

    #Unpack the exact length of the message from the app, and read the message.
    text_length = struct.unpack('i', text_length_bytes)[0]

    request = sys.stdin.buffer.read(text_length)
    request = json.loads(request.decode('utf-8'))
    document = request['doc']['text']
    file_env = request['file_env']
    sys.stderr.write('Document: ' + document + '\n')
    sys.stderr.write('File env: ' + str(file_env) + '\n')

    file_dict = {}
    for f in file_env:
        file_dict[f['path']] = f['text']

    translator = Translator(document, file_dict)
    try:
        res = translator.translate_internal()
        sys.stderr.write('Translator result: ' + str(res))
    except Exception as e:
        traceback.print_exc()
        res = {'text': None, 'error': 'Internal compiler error', 'line': translator.get_line(), 'files': []}

    #The text to send back to the app.
    text = json.dumps(res)

    #Tell the app how long your message is.
    sys.stdout.buffer.write(struct.pack('I', len(text)))

    #Send the message.
    sys.stdout.write(text)
    sys.stdout.flush()

